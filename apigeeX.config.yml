variables:
  MAVEN_CLI_OPTS: "-s /.m2/cicd-settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=/.m2/repository"
  SCANCENTRAL_BUILD_OPTS: "-bt mvn"
  DEFAULT_BRANCH: "feature-1"
  refresh: $refresh
  PIPELINE_TYPE: "admin-config-log"
  GATEWAY_PLATFORM: "apigee-x"

include: 
  - ci/global.variable.yml
  - ci/proxynotification.yml
  - ci/git.config.yml

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^feature-.*$/
      when: always
    - if: $CI_COMMIT_BRANCH == "develop" && ( $CI_PIPELINE_SOURCE == 'push' || $CI_PIPELINE_SOURCE == 'merge_request_event' )  
      when: always
    - when: never
    
default :
  tags:
    - $APIGEE_RUNNER_TAG

cache:
  key: "$CI_COMMIT_SHA"
  paths:
    - .m2/repository/
    - edge/target/
    - edge/node_modules/
    - pom.xml
    - edge/pom.xml
    - target/

.deploy_config: &deploy_config
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
    - cd edge
    - |
      if [[ "${APIGEE_CONFIG_TYPE}" == "apps" ]]  && [[ "${APIGEE_CONFIG_ACTION}" == "update" ]]; then
        echo "update apps to Apigee X"
        pwd && cd resources/org
        echo $basic_auth_apigee        
        curl --location 'https://connect-uat.fiservapis.com/v1/oauth/token' --header 'Content-Type:application/x-www-form-urlencoded' --header "Authorization:Basic $basic_auth_apigee" --data-urlencode 'grant_type=client_credentials' -o token_response.json
        cat token_response.json
        grep -o '"access_token": *"[^"]*"' token_response.json | sed 's/"access_token": *"\([^"]*\)"/\1/' > extracted_token
        echo "Extracted token:"
        #cat extracted_token
        curl --request PUT --location "https://connect-uat.fiservapis.com/v1/product-management/organizations/$APIGEE_CI_ORG/apps/$CI_PROJECT_NAME" --header "Content-Type:application/json" --header "Authorization:Bearer $(cat extracted_token)" --data @developerApps.json -vvv
      else
        if [[ "${APIGEE_CONFIG_ACTION}" == "sync" ]]; then APIGEE_CONFIG_ACTION="update"; fi
        if [[ $APIGEE_CI_ORG =~ "prj-fisv-n-emea-apigee517ef511" ]] ; then 
          echo $SERVICE_ACCOUNT_EMEA > service_account.json
        elif [[ $APIGEE_CI_ORG =~ "prj-fisv-n-latam-apigee94daf2" ]] ; then 
          echo $SERVICE_ACCOUNT > service_account.json
        elif [[ $APIGEE_CI_ORG =~ "prj-fisv-n-apac-apigeedf1aad80" ]] ; then 
          echo $SERVICE_ACCOUNT_APAC > service_account.json            
        else [[ $APIGEE_CI_ORG =~ "prj-fisv-n-apigeee4aa22a1" ]] ;
          echo $SERVICE_ACCOUNT > service_account.json
        fi
        ls -ltr service_account.json
          
        mvn $MAVEN_CLI_OPTS -Papigeex-config -Dfile=service_account.json -Denv=$APIGEE_CI_ENV -Dorg=$APIGEE_CI_ORG \
        -Dapigee.config.dir=resources -Dapigee.config.options=none \
        -Dapigee.options=override -Dapigee.override.delay=2 \
        apigee-config:$APIGEE_CONFIG_TYPE
        
        mvn $MAVEN_CLI_OPTS -Papigeex-config -Dfile=service_account.json -Denv=$APIGEE_CI_ENV -Dorg=$APIGEE_CI_ORG \
        -Dapigee.config.dir=resources -Dapigee.config.options=$APIGEE_CONFIG_ACTION \
        -Dapigee.options=override -Dapigee.override.delay=2 \
        -Dhttps.proxyHost=lvz-outboundproxy.onefiserv.net -Dhttps.proxyPort=8080 \
        apigee-config:$APIGEE_CONFIG_TYPE
      fi

.parent_pom_template: &parent_pom_definition
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
    - echo MAVEN_CLI_OPTS = $MAVEN_CLI_OPTS
    - echo project-version = $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
    - mvn $MAVEN_CLI_OPTS clean install deploy -f commons-parent-pom.xml -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dproject-version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

.upload_artifact_proxy_template: &upload_artifact_proxy_template
  image: $APIGEE_FMK_MVN_IMAGE_NAME
  script:
    - |
      echo "LAST_EXECUTED_STAGE_NAME=$CI_JOB_STAGE" >> build.env
      echo "LAST_EXECUTED_STAGE_URL=$CI_JOB_URL" >> build.env
      echo "Nexus_REPO_USER: $Nexus_REPO_USER"
      #echo "Nexus_REPO_PASS: $Nexus_REPO_PASS"
    - |
       sed -i "s~https://nexus.onefiserv.net/repository/Maven_Central/~\${NEXUS_CI_URL}~g; s~nexus.onefiserv.net~\${NEXUS_CICD_SERVER_ROOT}~g; s~mvn-na-fts-apim-uaid10785-private-~\${NEXUS_CICD_REPO}~g" commons-parent-pom.xml
       echo env = $APIGEE_ENV
       echo commit = $CI_COMMIT_SHORT_SHA
       if [[ "${APIGEE_CONFIG_TYPE}" == "apps" ]]; then 
        NAME="org-level" 
       else 
        NAME="dev"
       fi
       currentversion=$(grep -oP '<version>\K[^<]+' pom.xml | head -n 1 | cut -d'-' -f1)
       IFS='.' read -ra versioncomponents <<< "$currentversion"
       majorversion=${versioncomponents[0]}
       minorversion=${versioncomponents[1]}
       incrementalversion=${versioncomponents[2]}
       newversion="${majorversion}.${minorversion}.${incrementalversion}-${CI_COMMIT_SHORT_SHA}-${NAME}-SNAPSHOT"

       sed -i "s/<version>${currentversion}-SNAPSHOT<\/version>/<version>${newversion}<\/version>/" pom.xml
       echo "Updated pom version to: ${newversion}"

       sed -i "s/<version>${currentversion}-SNAPSHOT<\/version>/<version>${newversion}<\/version>/" edge/pom.xml
       echo "Updated child pom version to: ${newversion}"

       mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true
       echo "installing the package in local repository"

stages:
  - git-config
  - deploy-config
  - init-nexus
  - upload-nexus
  - notify

build:deploy-config :
  <<: *deploy_config
  stage: deploy-config
  needs:
    - build:populate-variables
  artifacts:
    reports:
      dotenv: build.env

build:setup :
  <<: *parent_pom_definition
  stage: init-nexus
  needs:
    - build:populate-variables
    - build:deploy-config
  artifacts:
    reports:
      dotenv: build.env
  
build:upload-artifact :
  <<: *upload_artifact_proxy_template
  stage: upload-nexus
  needs:
    - build:populate-variables
    - build:deploy-config
  artifacts:
    paths:
      - edge/target/*.jar
    reports:
      dotenv: build.env
